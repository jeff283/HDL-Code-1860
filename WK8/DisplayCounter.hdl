/**
 * 4-bit counter (0-15) with 7-segment display output.
 * Counter increments when inc is 1, and resets when reset is 1.
 * Output is displayed on a seven-segment display.
 */

CHIP DisplayCounter {
    IN inc, reset;
    OUT a,b,c,d,e,f,g;
    
    PARTS:
    // 4-bit register to store current count
    // We need to capture the individual bits separately
    Register4Bit(in=nextValue, load=true, out=currentValue, 
                out[0]=bit0, out[1]=bit1, out[2]=bit2, out[3]=bit3);
    
    // Increment circuit
    Inc4Bit(in=currentValue, out=incValue);
    
    // Create a zero value for reset
    Not(in=true, out=zero);
    
    // First multiplexer: choose between incremented value and zero (reset)
    Mux4(
        a=incValue,
        b[0]=zero,
        b[1]=zero,
        b[2]=zero,
        b[3]=zero,
        sel=reset,
        out=resetOrInc
    );
    
    // Second multiplexer: choose between current value and new value
    Mux4(
        a=currentValue,
        b=resetOrInc,
        sel=shouldUpdate,
        out=nextValue
    );
    
    // Control logic for updating
    // Only update if either reset is high or inc is high and not at max value (15)
    // We use the separately captured bits to check for value 15 (1111)
    And(a=bit0, b=bit1, out=temp1);
    And(a=bit2, b=bit3, out=temp2);
    And(a=temp1, b=temp2, out=is15);
    Not(in=is15, out=notMax);
    And(a=inc, b=notMax, out=shouldInc);
    Or(a=reset, b=shouldInc, out=shouldUpdate);
    
    // Connect current value to seven segment decoder
    SevenSegDecoder(in=currentValue, a=a, b=b, c=c, d=d, e=e, f=f, g=g);
}